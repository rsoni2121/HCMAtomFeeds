FORMAT: 1A
HOST: http://oracle.hcmatomfeeds.apiblueprint.org/

# Oracle HCM Atom Feeds


Atom feeds enable you to keep track of any changes made to feed-enabled resources in Oracle HCM Cloud.

For any updates that may be of interest for downstream applications, such as new hires, terminations, employee transfers and promotions, Oracle HCM Cloud publishes Atom feeds. Your applications will be able to read these feeds and 
take appropriate action.

For Atom feeds, even though the subscribing Java libraries poll the Atom server for updates, the volume of data is much lower. The Atom server data can be periodically purged, improving the performance greatly. Oracle HCM Cloud supports 
creation of Atom feeds in the following scenarios:

    - When an employee is hired, updated, or terminated
    - When an assignment is created, updated, or end dated
    - When any of the following workstructures is created, updated, or end dated:
        - Grades
        - Jobs
        - Locations
        - Organizations
        - Positions
    
    - When the availability for an employee is created, updated, or deleted.



## Manage Employee Feeds  [/hcmRestApi/resources/latest1/emps]


Use this URL format for subscribing to feeds in theemployee workspace:

https://hostname:hostport/hcmRestApi/atomservlet/employee/<collection>

The following table describes the Atom feed collections for theemployee workspace and the triggering events for the feeds.

Feeds are triggered only for employee, contingent worker, and pending worker types.



### Employee New Hire [GET /newhire{?updatedMin,updatedMax,page,pageSize}]

Get Atom feed details published for the newhire collection. 


+ Parameters
    + updatedMin (date, required) - This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes. 
    + updatedMax (date, optional) - When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. 
    + page (number, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
    + pageSize (number, optional) - The resource item payload will be filtered in order to contain only data (no links section, for example).


+ Response 201 (application/json)

        {
           "Context": [
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Rakesh Soni",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            },
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Rakesh Soni",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            },
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Goerge Phillips",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            },
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Ram Kumar",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            },
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Ashima Soni",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            },
            {
            "PrimaryPhoneNumber": "<Primary work phone number>",
            "PersonId": "<Person Id>",
            "PersonName": "Chaitali Soni",
            "EffectiveStartDate": "<Effective start date>",
            "EffectiveDate" : "<Effective date of update>",
            "WorkerType" : "<Worker type>",
            "PeriodType" : "<Period type>",
            "PersonNumber": "<Person number>",
            "WorkEmail": "<Work email>"
            }
            ]
        }


### Employee Update [GET /empupdate{?updatedMin,updatedMax,page,pageSize}]

Get Atom feed details published for the empupdate collection. 

+ Parameters
    + updatedMin (date, required) - This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes. 
    + updatedMax (date, optional) - When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. 
    + page (number, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
    + pageSize (number, optional) - The resource item payload will be filtered in order to contain only data (no links section, for example).

+ Request (application/json)

+ Response 201 (application/json)

         {
            "Context" : [ {
                "PrimaryPhoneNumber" : "656565656",
                 "PersonId" : "100000000361631",
                 "PersonName" : "Soni, Rakesh",
                 "EffectiveStartDate" : "2017-05-31",
                "EffectiveDate" : "2018-05-08",
                "WorkerType" : "EMP",
                "PeriodType" : "E",
                "PersonNumber" : "2167",
                "WorkEmail": "<Work email>"
             } ],
            "Changed Attributes" : [ {  
                "archive attribute1" : {
                "old" : "<old value>",
                "new" : "<new value>"
             }
            } ]
        }


### Employee Termination [GET /termination{?updatedMin,updatedMax,page,pageSize}]

Get Atom feed details published for the termination collection. 

+ Parameters
    + updatedMin (date, required) - This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes. 
    + updatedMax (date, optional) - When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. 
    + page (number, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
    + pageSize (number, optional) - The resource item payload will be filtered in order to contain only data (no links section, for example).


+ Request (application/json)

+ Response 201 (application/json)

        {
            "Context" : [ {
                "PrimaryPhoneNumber" : "656565656",
                 "PersonId" : "100000000361631",
                 "PersonName" : "Soni, Rakesh",
                 "EffectiveStartDate" : "2017-05-31",
                "EffectiveDate" : "2018-05-08",
                "WorkerType" : "EMP",
                "PeriodType" : "E",
                "PersonNumber" : "2167",
                "WorkEmail": "<Work email>"
             } ],
            "Changed Attributes" : [ {  
                "archive attribute1" : {
                "old" : "<old value>",
                "new" : "<new value>"
             }
            } ]
        }
        
### Employee Assignment [GET /empassignment{?updatedMin,updatedMax,page,pageSize}]

Get Atom feed details published for the empassignment collection. 

+ Parameters
    + updatedMin (date, required) - This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes. 
    + updatedMax (date, optional) - When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. 
    + page (number, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
    + pageSize (number, optional) - The resource item payload will be filtered in order to contain only data (no links section, for example).



+ Request (application/json)


+ Response 201 (application/json)

          {
            "Context" : [ {
                "PrimaryPhoneNumber" : "656565656",
                "Assignment Id": "<Assignment Id>",
                 "PersonId": "<Person Id>",
                "PersonName": "<Full display name>",
                "EffectiveDate" : "<Effective date of update>",
                "WorkerType" : "<Worker type>",
                "PeriodType" : "<Period type>",
                "PersonNumber": "<Person number>",
                "WorkEmail": "<Work e-mail>"
             } ],
            "Changed Attributes" : [ {  
                "archive attribute1" : {
                "old" : "<old value>",
                "new" : "<new value>"
             }
            } ]
        }

 

## Employee REST API for Oracle HCM Cloud  [/hcmRestApi/resources/latest2/emps]

### Get an Employee Details [GET /hcmRestApi/resources/latest/emps/{empsUniqID}/{?dependency,expand,fields,onlyData}]

Get a particular person details by providing an person unique ID.

+ Parameters
    + empsUniqID: 30000038151 (number, required) - Person empsUniqID.
    + dependency (string, optional) - This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes. 
    + expand (string, optional) - When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. 
    + fields (string, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
    + onlyData (boolean, optional) - The resource item payload will be filtered in order to contain only data (no links section, for example).
   
+ Response 201 (application/json)


        {
         "properties":{
        "AddressLine1":{
            "maxLength":240,
            "type":"string",
            "description":"First line of the primary mailing address.",
            "title":"Address Line 1"
        },
        "AddressLine2":{
            "maxLength":240,
            "type":"string",
            "description":"Second line of the primary mailing address.",
            "title":"Address Line 2"
        },
        "AddressLine3":{
            "maxLength":240,
            "type":"string",
            "description":"Third line of the primary mailing address.",
            "title":"Address Line 3"
        },
        "CitizenshipId":{
            "format":"int64",
            "type":"integer",
            "description":"Primary key generated by the application."
        },
        "CitizenshipLegislationCode":{
            "maxLength":30,
            "type":"string",
            "description":"Legislation code derived from the legal entity. Valid values are defined in the list CitizenshipLegislationCodeLOV.",
            "title":"Citizenship"
        },
        "CitizenshipStatus":{
            "maxLength":30,
            "type":"string",
            "description":"Status of the person's citizenship. Valid values are defined in the list CitizenshipStatusLOV.",
            "title":"Citizenship Status"
        },
        "CitizenshipToDate":{
            "format":"date",
            "type":"string",
            "description":"End date of citizenship.",
            "title":"To Date"
        },
        "City":{
            "maxLength":30,
            "type":"string",
            "description":"Town or city in which the address is located.",
            "title":"Town or City"
        },
        "CorrespondenceLanguage":{
            "maxLength":30,
            "type":"string",
            "description":"Preferred language for communication. Valid values are defined in the list CorrespondenceLanguageLOV.",
            "title":"Correspondence Language"
        },
        "Country":{
            "maxLength":60,
            "type":"string",
            "description":"Country in which the address is located.",
            "title":"Country"
        },
        "CreationDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of creation of the employee record."
        },
        "DateOfBirth":{
            "format":"date",
            "type":"string",
            "description":"Date of birth of the person.",
            "title":"Date of Birth"
        },
        "DisplayName":{
            "maxLength":240,
            "type":"string",
            "description":"Person's display name.",
            "title":"Name"
        },
        "DriversLicenseExpirationDate":{
            "format":"date",
            "type":"string",
            "description":"Expiration date of the driver's license.",
            "title":"To Date"
        },
        "DriversLicenseId":{
            "format":"int64",
            "type":"integer",
            "description":"System-generated primary key. Surrogate key."
        },
        "DriversLicenseIssuingCountry":{
            "maxLength":30,
            "type":"string",
            "description":"Country that issued the driver's license.",
            "title":"Issuing Country"
        },
        "EffectiveStartDate":{
            "format":"date",
            "type":"string",
            "description":"Date at the beginning of the date range within which the employee is effective.",
            "title":"Effective Start Date"
        },
        "Ethnicity":{
            "maxLength":30,
            "type":"string",
            "description":"Person's ethnicity for the legislation code. Valid values are defined in the list EthnicityLOV.",
            "title":"Ethnicity"
        },
        "FirstName":{
            "maxLength":150,
            "type":"string",
            "description":"Person's first name.",
            "title":"First Name"
        },
        "Gender":{
            "maxLength":30,
            "type":"string",
            "description":"Person's gender. Valid values are defined in the list GenderLOV.",
            "title":"Gender"
        },
        "HireDate":{
            "format":"date",
            "type":"string",
            "description":"Hire date of the employee."
        },
        "HomeFaxAreaCode":{
            "maxLength":30,
            "type":"string",
            "description":"Area code of the phone number for the home fax machine.",
            "title":"Area Code"
        },
        "HomeFaxCountryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Country code of the phone number for the home fax machine.",
            "title":"Country Code"
        },
        "HomeFaxExtension":{
            "maxLength":60,
            "type":"string",
            "description":"Extension of the phone number for the home fax machine.",
            "title":"Extension"
        },
        "HomeFaxLegislationCode":{
            "maxLength":4,
            "type":"string",
            "description":"Legislation code of the home fax number.",
            "title":"Country Code"
        },
        "HomeFaxNumber":{
            "maxLength":60,
            "type":"string",
            "description":"Phone number for the home fax machine.",
            "title":"Number"
        },
        "HomePhoneAreaCode":{
            "maxLength":30,
            "type":"string",
            "description":"Area code of the home phone number.",
            "title":"Area Code"
        },
        "HomePhoneCountryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Country code of the home phone number.",
            "title":"Country Code"
        },
        "HomePhoneExtension":{
            "maxLength":60,
            "type":"string",
            "description":"Extension of the home phone number.",
            "title":"Extension"
        },
        "HomePhoneLegislationCode":{
            "maxLength":4,
            "type":"string",
            "description":"Legislation code of the home phone number.",
            "title":"Country Code"
        },
        "HomePhoneNumber":{
            "maxLength":60,
            "type":"string",
            "description":"Home phone number.",
            "title":"Number"
        },
        "Honors":{
            "maxLength":80,
            "type":"string",
            "description":"Higher qualification appended to a person's name. For example, PhD.",
            "title":"Honors"
        },
        "LastName":{
            "maxLength":150,
            "type":"string",
            "description":"Person's last name.",
            "title":"Last Name"
        },
        "LastUpdateDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of update of the employee record."
        },
        "LegalEntityId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the legal entity. Valid values are defined in the list LegalEmployerLOV."
        },
        "LicenseNumber":{
            "maxLength":150,
            "type":"string",
            "description":"Person's driving license number.",
            "title":"License Number"
        },
        "MaritalStatus":{
            "maxLength":30,
            "type":"string",
            "description":"Person's marital status. Valid values are defined in the list MaritalStatusLOV.",
            "title":"Marital Status"
        },
        "MiddleName":{
            "maxLength":80,
            "type":"string",
            "description":"Person's middle name.",
            "title":"Middle Names"
        },
        "MilitaryVetStatus":{
            "maxLength":30,
            "type":"string",
            "description":"Indicates whether the person is on military service. Valid values are defined in the listt MilitaryVetStatusLOV."
        },
        "NameSuffix":{
            "maxLength":80,
            "type":"string",
            "description":"Part of the name appended to a person's last name such as Jr., III, etc.",
            "title":"Suffix"
        },
        "NationalId":{
            "maxLength":30,
            "type":"string",
            "description":"Primary key generated by the application.",
            "title":"National ID"
        },
        "NationalIdCountry":{
            "maxLength":30,
            "type":"string",
            "description":"Country of nationality.",
            "title":"Place of Issue"
        },
        "NationalIdExpirationDate":{
            "format":"date",
            "type":"string",
            "description":"Expiration date of the national identifier.",
            "title":"Expiration Date"
        },
        "NationalIdType":{
            "maxLength":30,
            "type":"string",
            "description":"Type of national identifier. Valid values are defined in the list NationalIdTypeLOV.",
            "title":"National ID Type"
        },
        "PassportExpirationDate":{
            "format":"date",
            "type":"string",
            "description":"Expiration date of the passport.",
            "title":"Expiration Date"
        },
        "PassportId":{
            "format":"int64",
            "type":"integer",
            "description":"Primary key generated by the application."
        },
        "PassportIssueDate":{
            "format":"date",
            "type":"string",
            "description":"Date of issue of passport.",
            "title":"Issue Date"
        },
        "PassportIssuingCountry":{
            "maxLength":30,
            "type":"string",
            "description":"Country that issued the passport.",
            "title":"Issuing Country"
        },
        "PassportNumber":{
            "maxLength":30,
            "type":"string",
            "description":"Person's passport number.",
            "title":"Number"
        },
        "PersonId":{
            "format":"int64",
            "type":"integer",
            "description":"Internal identifier for the person.",
            "title":"Person ID"
        },
        "PersonNumber":{
            "maxLength":30,
            "type":"string",
            "description":"Number assigned to a person to identify the person uniquely. Does not depend on the person type (employee, contingent worker, etc). Search on this attribute is not case sensitive.",
            "title":"Person Number"
        },
        "PostalCode":{
            "maxLength":30,
            "type":"string",
            "description":"Postal code of the address.",
            "title":"Postal Code"
        },
        "PreferredName":{
            "maxLength":80,
            "type":"string",
            "description":"Person's preferred first name.",
            "title":"Known As"
        },
        "PreviousLastName":{
            "maxLength":150,
            "type":"string",
            "description":"Previous last name of the person, if any.",
            "title":"Previous Last Name"
        },
        "ProjectedTerminationDate":{
            "format":"date",
            "type":"string",
            "description":"Projected termination date for the worker."
        },
        "Region":{
            "maxLength":120,
            "type":"string",
            "description":"Primary region in which the address is located.",
            "title":"Region 1"
        },
        "Region2":{
            "maxLength":120,
            "type":"string",
            "description":"Secondary region within the primary region.",
            "title":"Region 2"
        },
        "Religion":{
            "maxLength":30,
            "type":"string",
            "description":"Person's religion. Valid values are defined in the list ReligionLOV.",
            "title":"Religion"
        },
        "ReligionId":{
            "format":"int64",
            "type":"integer",
            "description":"Primary key generated by the application."
        },
        "Salutation":{
            "maxLength":30,
            "type":"string",
            "description":"Person salutation such as Mr., Ms., and so on. Valid values are defined in the list SalutationLOV.",
            "title":"Title"
        },
        "TerminationDate":{
            "format":"date",
            "type":"string",
            "description":"Termination date of the employee."
        },
        "UserName":{
            "maxLength":100,
            "type":"string",
            "description":"User name for the record. This value is optional and is automatically generated if not specified. Also works with UsernameMatching attribute. Search on this attribute is not case sensitive."
        },
        "WorkEmail":{
            "maxLength":240,
            "type":"string",
            "description":"Person's work email address. Search on this attribute is not case sensitive.",
            "title":"Email"
        },
        "WorkFaxAreaCode":{
            "maxLength":30,
            "type":"string",
            "description":"Area code of the phone number for the work fax machine.",
            "title":"Area Code"
        },
        "WorkFaxCountryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Country code of the phone number for the work fax machine.",
            "title":"Country Code"
        },
        "WorkFaxExtension":{
            "maxLength":60,
            "type":"string",
            "description":"Extension of the phone number for the work fax machine.",
            "title":"Extension"
        },
        "WorkFaxLegislationCode":{
            "maxLength":4,
            "type":"string",
            "description":"Legislation code of the work fax number.",
            "title":"Country Code"
        },
        "WorkFaxNumber":{
            "maxLength":60,
            "type":"string",
            "description":"Phone number for the home fax machine.",
            "title":"Number"
        },
        "WorkMobilePhoneAreaCode":{
            "maxLength":30,
            "type":"string",
            "description":"Area code of the work mobile phone number.",
            "title":"Area Code"
        },
        "WorkMobilePhoneCountryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Country code of the work mobile phone number.",
            "title":"Country Code"
        },
        "WorkMobilePhoneExtension":{
            "maxLength":60,
            "type":"string",
            "description":"Extension of the work mobile phone number.",
            "title":"Extension"
        },
        "WorkMobilePhoneLegislationCode":{
            "maxLength":4,
            "type":"string",
            "description":"Legislation code of the work mobile phone number.",
            "title":"Country Code"
        },
        "WorkMobilePhoneNumber":{
            "maxLength":60,
            "type":"string",
            "description":"Work mobile phone number.",
            "title":"Number"
        },
        "WorkPhoneAreaCode":{
            "maxLength":30,
            "type":"string",
            "description":"Area code of the work phone number.",
            "title":"Area Code"
        },
        "WorkPhoneCountryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Country code of the work phone number. For example, 39 for Italy.",
            "title":"Country Code"
        },
        "WorkPhoneExtension":{
            "maxLength":60,
            "type":"string",
            "description":"Extension of the work phone number.",
            "title":"Extension"
        },
        "WorkPhoneLegislationCode":{
            "maxLength":4,
            "type":"string",
            "description":"Legislation code of the work phone number.",
            "title":"Country Code"
        },
        "WorkPhoneNumber":{
            "maxLength":60,
            "type":"string",
            "description":"Work phone number.",
            "title":"Number"
        },
        "WorkerType":{
            "maxLength":30,
            "type":"string",
            "description":"Primary type of a worker such as employee (E), contingent worker (C), pending worker (P), or non-worker (N). This is a read-only attribute as indicated in the describe metadata."
        },
        "assignments":{
            "$ref":"#/definitions/emps-assignments",
            "description":"The assignments resource is a child of the emps resource. It includes all employee assignments as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Assignments"
        },
        "directReports":{
            "$ref":"#/definitions/emps-directReports",
            "description":"The directReports resource is a child of the emps resource. It includes all employee direct reports as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Direct Reports"
        },
        "links":{
            "items":{
                "$ref":"#/definitions/link"
            },
            "type":"array",
            "description":"Link Relations",
            "title":"Items"
        },
        "personDFF":{
            "$ref":"#/definitions/emps-personDFF",
            "description":"The personDFF resource is a child of the emps resource. It includes all employee descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Person Descriptive Flexfields"
        },
        "personExtraInformation":{
            "$ref":"#/definitions/emps-personExtraInformation",
            "description":"The personExtraInformation resource is a child of the emps resource. It includes all the extensible flexfields for additional person information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Person Extra Information Extensible FlexFields"
        },
        "photo":{
            "$ref":"#/definitions/emps-photo",
            "description":"The photo resource is a child of the emps resource. It includes all employee primary photos as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Photos"
        },
        "roles":{
            "$ref":"#/definitions/emps-roles",
            "description":"The roles resource is a child of the emps resource. It includes all employee roles as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Roles"
        },
        "visas":{
            "$ref":"#/definitions/emps-visas",
            "description":"The visas resource is a child of the emps resource. It includes all employee visas as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Visas"
        }
        },
        "x-links":[
        {
            "rel":"lov",
            "title":"Salutation LOV",
            "description":"The list of values for person salutation.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Salutation; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/SalutationLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "Salutation"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"CorrespondenceLanguage LOV",
            "description":"The list of values for the preferred language of communication.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CorrespondenceLanguage; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/CorrespondenceLanguageLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "CorrespondenceLanguage"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"Ethnicity LOV",
            "description":"The list of values for person ethnicity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Ethnicity; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/EthnicityLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "Ethnicity"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"LegalEntityId LOV",
            "description":"The list of values for legal entities.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LegalEntityId; Target Attribute: OrganizationId</li><li>Display Attribute: OrganizationId</li><li>Display Attribute: LegalEntityId</li><li>Display Attribute: Name</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/LegalEmployerLOV?fields=OrganizationId,LegalEntityId,Name",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "OrganizationId":{
                        "type":"integer",
                        "description":"Unique identifier for the organization."
                    },
                    "LegalEntityId":{
                        "type":"integer",
                        "description":"Unique identifier for the legal entity."
                    },
                    "Name":{
                        "type":"string",
                        "description":"Name of the legal entity."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "LegalEntityId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"Gender LOV",
            "description":"The list of values for gender such as MALE or FEMALE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Gender; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/GenderLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "Gender"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"MaritalStatus LOV",
            "description":"The list of values for marital status, such as MARRIED or SINGLE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MaritalStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/MaritalStatusLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "MaritalStatus"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"NationalIdType LOV",
            "description":"The list of values for national identifiers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NationalIdType; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/NationalIdTypeLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "NationalIdType"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"CitizenshipStatus LOV",
            "description":"The list of values for citizenship status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CitizenshipStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/CitizenshipStatusLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "CitizenshipStatus"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"CitizenshipLegislationCode LOV",
            "description":"The list of values for the legislation code derived from the legal entity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CitizenshipLegislationCode; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/CitizenshipLegislationCodeLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "CitizenshipLegislationCode"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"Religion LOV",
            "description":"The list of values for religion.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Religion; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/ReligionLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "Religion"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"MilitaryVetStatus LOV",
            "description":"The list of values for military service status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MilitaryVetStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/lov/MilitaryVetStatusLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "MilitaryVetStatus"
            ],
            "effectiveMethod":"get"
        }
        ],
        "type":"object"
        }
        
### Get all Employee Assignments [GET /hcmRestApi/resources/latest/emps/{empsUniqID}/child/assignments]

Get an employee ALL assignment by providing a person empsUniqID.


+ Parameters
    + empsUniqID: `30000028141` (number, required) - This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId.
 
    
+ Response 200 (application/json)

        {
        "properties":{
        "count":{
            "type":"integer",
            "description":"The number of resource instances returned in the current range.",
            "title":"Count"
        },
        "hasMore":{
            "type":"boolean",
            "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
            "title":"HasMore"
        },
        "items":{
            "items":{
                "$ref":"#/definitions/emps-assignments-item"
            },
            "type":"array",
            "description":"The items in the collection.",
            "title":"Items"
        },
        "limit":{
            "type":"integer",
            "description":"The actual paging size used by the server.",
            "title":"Limit"
        },
        "links":{
            "items":{
                "$ref":"#/definitions/link"
            },
            "type":"array",
            "description":"The link relations associated with the resource instance.",
            "title":"Items"
        },
        "offset":{
            "type":"integer",
            "description":"The offset value used in the current page.",
            "title":"Offset"
        }
        },
        "type":"object"
        }




### Get an Employee Assignment [GET /hcmRestApi/resources/latest/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}]

Get an employee assignment by providing a person empsUniqID and a particular employee assignment by providing an assignment unique ID. 


+ Parameters
    + empsUniqID: `30` (number, required) - This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId.
    + assignmentsUniqID: `119` (number, required) - This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate
    
+ Response 200 (application/json)

        {
        "properties":{
        "ActionCode":{
            "maxLength":30,
            "type":"string",
            "description":"Action performed on a particular record, such as Hire, Add Pending Worker, Manager Change, and so on. Valid values are defined in the list ActionCodeLOV.",
            "title":"Action Code"
        },
        "ActionReasonCode":{
            "maxLength":30,
            "type":"string",
            "description":"User-defined code for the action reason. Specifies the reason for the action performed on the record. Valid values are defined in the list ActionReasonCodeLOV.",
            "title":"Reason Code"
        },
        "ActualTerminationDate":{
            "format":"date",
            "type":"string",
            "description":"Actual date of termination of employment. This is required during termination, when the TerminateWorkRelationshipFlag is set to Y."
        },
        "AssignmentCategory":{
            "maxLength":30,
            "type":"string",
            "description":"User-defined category such as Full-Time Permanent or Part-Time Permanent. Valid values are defined in the list AssignmentCategoryLOV.",
            "title":"Assignment Category"
        },
        "AssignmentId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the assignment. This is a primary key generated by the application.",
            "title":"Assignment ID"
        },
        "AssignmentName":{
            "maxLength":80,
            "type":"string",
            "description":"Name of the assignment.",
            "title":"Assignment Name"
        },
        "AssignmentNumber":{
            "maxLength":30,
            "type":"string",
            "description":"Unique identifier for the assignment or terms. Valid for workers and nonworkers.",
            "title":"Assignment Number"
        },
        "AssignmentProjectedEndDate":{
            "format":"date",
            "type":"string",
            "description":"Date on which the assignment is expected to end.",
            "title":"Projected End Date"
        },
        "AssignmentStatus":{
            "maxLength":30,
            "type":"string",
            "description":"HR status of the assignment, such as Active or Inactive. Valid values are defined in the list AssignmentStatusLOV.",
            "title":"Assignment Status"
        },
        "AssignmentStatusTypeId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the user-defined assignment status. Valid values are defined in the list AssignmentStatusTypeIdLOV."
        },
        "BusinessUnitId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the business unit. Valid values are defined in the list BusinessUnitIdLOV."
        },
        "CreationDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of creation of the employee assignment record."
        },
        "DepartmentId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the department. Valid values are defined in the list DepartmentIdLOV."
        },
        "EffectiveEndDate":{
            "format":"date",
            "type":"string",
            "description":"Date at the end of the date range within which the employee assignment is effective."
        },
        "EffectiveStartDate":{
            "format":"date",
            "type":"string",
            "description":"Date at the beginning of the date range within which the employee assignment is effective."
        },
        "EndTime":{
            "maxLength":5,
            "type":"string",
            "description":"Work day normal end time.",
            "title":"End Time"
        },
        "Frequency":{
            "maxLength":30,
            "type":"string",
            "description":"Frequency of normal working hours such as week, month, year. Valid values are defined in the list FrequencyLOV.",
            "title":"Frequency"
        },
        "FullPartTime":{
            "maxLength":30,
            "type":"string",
            "description":"Indicates whether the position the employee is hired for is full-time or part-time. Valid values are defined in the list FullPartTimeLOV.",
            "title":"Full Time or Part Time"
        },
        "GradeId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the grade. Valid values are defined in the list GradeIdLOV."
        },
        "GradeLadderId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the grade ladder."
        },
        "JobId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the job. Valid values are defined in the list JobIdLOV."
        },
        "LastUpdateDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of update of the employee assignment record."
        },
        "LegalEntityId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the legal entity."
        },
        "LocationId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the location. Valid values are defined in the list LocationIdLOV."
        },
        "ManagerAssignmentId":{
            "format":"int64",
            "type":"integer",
            "description":"Identifier for the manager's assignment.",
            "title":"Manager Assignment ID"
        },
        "ManagerId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for a manager. Valid values are defined in the list ManagerIdLOV.",
            "title":"Manager ID"
        },
        "ManagerType":{
            "maxLength":30,
            "type":"string",
            "description":"Role of the manager with regards to the overall organization structure. For example, functional, project leader, and so on.",
            "title":"Type"
        },
        "OriginalHireDate":{
            "format":"date",
            "type":"string",
            "description":"Original date of hire for employment."
        },
        "PeriodOfServiceId":{
            "format":"int64",
            "type":"integer",
            "description":"Primary key generated by the application."
        },
        "PersonTypeId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the person type. Valid values are defined in the list PersonTypeIdLOV."
        },
        "PositionId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for a position. Valid values are defined in the list PositionIdLOV."
        },
        "PrimaryAssignmentFlag":{
            "type":"boolean",
            "description":"Indicates whether the current assignment is the primary assignment. Valid values are Yes and No.",
            "title":"Primary"
        },
        "PrimaryWorkRelationFlag":{
            "type":"boolean",
            "description":"Indicates whether the current work relationship is primary. Valid values are Yes and No.",
            "title":"Primary"
        },
        "PrimaryWorkTermsFlag":{
            "type":"boolean",
            "description":"Indicates whether the current employment terms are primary. Valid values are Yes and No.",
            "title":"Primary employment terms"
        },
        "ProbationPeriodEndDate":{
            "format":"date",
            "type":"string",
            "description":"End date of probation period.",
            "title":"Probation End Date"
        },
        "ProbationPeriodLength":{
            "type":"number",
            "description":"Duration of probation period.",
            "title":"Probation Period"
        },
        "ProbationPeriodUnitOfMeasure":{
            "maxLength":30,
            "type":"string",
            "description":"Units for the probation period duration. Valid values are defined in the list QUALIFYING_UNITS.",
            "title":"Probation Unit"
        },
        "ProjectedStartDate":{
            "format":"date",
            "type":"string",
            "description":"Proposed start date for the pending worker.",
            "title":"Projected Start Date"
        },
        "ProposedPersonTypeId":{
            "maxLength":30,
            "type":"string",
            "description":"Unique identifier for the worker class. This value is valid only if the PersonTypeId is Pending Worker. It can be any of the employee or contingent worker types. Valid values are defined in the list ProposedPersonTypeIdLOV.",
            "title":"Proposed Person Type"
        },
        "RegularTemporary":{
            "maxLength":30,
            "type":"string",
            "description":"Indicates whether the position the employee is hired for is regular or temporary. Valid values are defined in the list RegularTemporaryLOV.",
            "title":"Regular or Temporary"
        },
        "SalaryAmount":{
            "type":"number",
            "description":"Salary amount entered based on the salary frequency.",
            "title":"Salary Amount"
        },
        "SalaryBasisId":{
            "format":"int64",
            "type":"integer",
            "description":"Identifier for the set of details linked to a worker's base pay. It identifies the payroll characteristics used to pay base earnings, the duration for which base pay is quoted, the factor used to annualize base pay, any components used to attribute base pay adjustments to different reasons, and any associated grade rate for salary validation. Valid values are defined in the list  SalaryBasisIdLOV."
        },
        "SalaryCode":{
            "maxLength":30,
            "type":"string",
            "description":"Identifies whether the assignment is paid by the hour or by a salary. Either maintained at the assignment level or employment or placement terms but not both. Valid values are defined in the list SalaryCodeLOV.",
            "title":"Hourly Paid or Salaried"
        },
        "StartTime":{
            "maxLength":5,
            "type":"string",
            "description":"Work day normal start time.",
            "title":"Start Time"
        },
        "TermsEffectiveStartDate":{
            "format":"date",
            "type":"string",
            "description":"Date at the beginning of the date range within which the employee term is effective."
        },
        "WorkTaxAddressId":{
            "format":"int64",
            "type":"integer",
            "description":"Unique identifier for the address that is used for taxation purposes. This can be different from a mailing address. Valid values are defined in the list WorkTaxAddressIdLOV."
        },
        "WorkerCategory":{
            "maxLength":30,
            "type":"string",
            "description":"Category of the worker such as Blue Collar, Civil Servant, and so on. Valid values are defined in the list WorkerCategoryLOV.",
            "title":"Worker Category"
        },
        "WorkingAsManager":{
            "maxLength":30,
            "type":"string",
            "description":"Indicates whether the person is a manager. Valid values are Yes and No.",
            "title":"Working as a Manager"
        },
        "WorkingAtHome":{
            "maxLength":30,
            "type":"string",
            "description":"Indicates whether the person is working at home. Valid values are Yes and No.",
            "title":"Working at Home"
        },
        "WorkingHours":{
            "type":"number",
            "description":"Normal working hours.",
            "title":"Working Hours"
        },
        "assignmentDFF":{
            "$ref":"#/definitions/emps-assignments-assignmentDFF",
            "description":"The assignmentDFF resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Assignment Descriptive Flexfields"
        },
        "assignmentExtraInformation":{
            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation",
            "description":"The assignmentExtraInformation resource is a child of the emps resource. It includes all the extensible flexfields for additional assignment information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Assignment Extra Information Extensible FlexFields"
        },
        "empreps":{
            "$ref":"#/definitions/emps-assignments-empreps",
            "description":"The empreps resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes all employee representatives as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"Employee Representatives"
        },
        "links":{
            "items":{
                "$ref":"#/definitions/link"
            },
            "type":"array",
            "description":"Link Relations",
            "title":"Items"
        },
        "peopleGroupKeyFlexfield":{
            "$ref":"#/definitions/emps-assignments-peopleGroupKeyFlexfield",
            "description":"The peopleGroupKeyFlexfield resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
            "title":"People Group Key Flexfields"
        }
        },
        "x-links":[
        {
            "rel":"lov",
            "title":"PersonTypeId LOV",
            "description":"The list of values for the worker class, such as CONSULTANT, TRAINEE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PersonTypeId; Target Attribute: PersonTypeId</li><li>Display Attribute: PersonTypeId</li><li>Display Attribute: SystemPersonType</li><li>Display Attribute: UserPersonType</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/PersonTypeIdLOV?fields=PersonTypeId,SystemPersonType,UserPersonType",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "PersonTypeId":{
                        "type":"integer",
                        "description":"Unique Identifier for a persontypes."
                    },
                    "SystemPersonType":{
                        "type":"string",
                        "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Contingent worker, Employee."
                    },
                    "UserPersonType":{
                        "type":"string",
                        "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Assignee, Consultant, Expatriate, Agency/Temp, Intern, Apprentice, Contractor, Trainee."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "PersonTypeId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"ProposedPersonTypeId LOV",
            "description":"The list of values for the proposed person type, such as CONSULTANT, CONTRACTOR, EMPLOYEE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProposedPersonTypeId; Target Attribute: PersonTypeId</li><li>Display Attribute: PersonTypeId</li><li>Display Attribute: SystemPersonType</li><li>Display Attribute: UserPersonType</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ProposedPersonTypeIdLOV?fields=PersonTypeId,SystemPersonType,UserPersonType",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "PersonTypeId":{
                        "type":"integer",
                        "description":"Unique identifier for a person type."
                    },
                    "SystemPersonType":{
                        "type":"string",
                        "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Contingent Worker, Employee."
                    },
                    "UserPersonType":{
                        "type":"string",
                        "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Assignee, Consultant, Expatriate, Agency/Temp, Intern, Apprentice, Contractor, Trainee."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "ProposedPersonTypeId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"BusinessUnitId LOV",
            "description":"The list of values for business units.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BusinessUnitId; Target Attribute: BusinessUnitId</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/BusinessUnitIdLOV?fields=BusinessUnitId",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "BusinessUnitId":{
                        "type":"integer",
                        "description":"Determinant for 'Set Enabled' tables and those using BU as a partitioning key."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "BusinessUnitId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"LocationId LOV",
            "description":"The list of values for locations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LocationId; Target Attribute: LocationId</li><li>Display Attribute: LocationId</li><li>Display Attribute: LocationName</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/LocationIdLOV?fields=LocationId,LocationName",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LocationId":{
                        "type":"integer",
                        "description":"Unique identifier for a location."
                    },
                    "LocationName":{
                        "type":"string",
                        "description":"Name of a location."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "LocationId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"JobId LOV",
            "description":"The list of values for jobs.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: JobId; Target Attribute: JobId</li><li>Display Attribute: JobId</li><li>Display Attribute: Name</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/JobIdLOV?fields=JobId,Name",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "JobId":{
                        "type":"integer",
                        "description":"Unique identifier for a job."
                    },
                    "Name":{
                        "type":"string",
                        "description":"Name of a job."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "JobId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"GradeId LOV",
            "description":"The list of values for grades.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: GradeId; Target Attribute: GradeId</li><li>Display Attribute: GradeId</li><li>Display Attribute: Name</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/GradeIdLOV?fields=GradeId,Name",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "GradeId":{
                        "type":"integer",
                        "description":"Unique identifier for a grade."
                    },
                    "Name":{
                        "type":"string",
                        "description":"Name of a grade."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "GradeId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"DepartmentId LOV",
            "description":"The list of values for departments.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DepartmentId; Target Attribute: OrganizationId</li><li>Display Attribute: OrganizationId</li><li>Display Attribute: Name</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/DepartmentIdLOV?fields=OrganizationId,Name",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "OrganizationId":{
                        "type":"integer",
                        "description":"Unique identifier for a department."
                    },
                    "Name":{
                        "type":"string",
                        "description":"Name of a department."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "DepartmentId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"WorkerCategory LOV",
            "description":"The list of values for worker category.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkerCategory; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/WorkerCategoryLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "WorkerCategory"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"AssignmentCategory LOV",
            "description":"The list of values for assignment category.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentCategory; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/AssignmentCategoryLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "AssignmentCategory"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"SalaryCode LOV",
            "description":"The list of values for salary code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalaryCode; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/SalaryCodeLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "SalaryCode"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"Frequency LOV",
            "description":"The list of values for frequency of working hours, such as HOURLY or WEEKLY.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Frequency; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/FrequencyLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "Frequency"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"SalaryBasisId LOV",
            "description":"The list of values for salary basis.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalaryBasisId; Target Attribute: SalaryBasisId</li><li>Display Attribute: SalaryBasisId</li><li>Display Attribute: SalaryBasisCode</li><li>Display Attribute: SalaryBasisName</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/SalaryBasisIdLOV?fields=SalaryBasisId,SalaryBasisCode,SalaryBasisName",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "SalaryBasisId":{
                        "type":"integer",
                        "description":"Identifier for the set of details linked to a worker's base pay. It identifies the payroll characteristics used to pay base earnings, the duration for which base pay is quoted, the factor used to annualize base pay, any components used to attribute base pay adjustments to different reasons, and any associated grade rate for salary validation."
                    },
                    "SalaryBasisCode":{
                        "type":"string",
                        "description":"Code for the salary basis."
                    },
                    "SalaryBasisName":{
                        "type":"string",
                        "description":"Name of the salary basis."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "SalaryBasisId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"ActionCode LOV",
            "description":"The list of values for the action performed on a specific record.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActionCode; Target Attribute: ActionCode</li><li>Display Attribute: ActionCode</li><li>Display Attribute: ActionId</li><li>Display Attribute: ActionName</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ActionCodeLOV?fields=ActionCode,ActionId,ActionName",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "ActionCode":{
                        "type":"string",
                        "description":"Unique code for the action performed on a particular record. For example, HIRE, ADD PENDING WORKER, MANAGER CHANGE, and so on."
                    },
                    "ActionId":{
                        "type":"integer",
                        "description":"Unique identifier for the action performed on a particular record."
                    },
                    "ActionName":{
                        "type":"string",
                        "description":"Name of the action performed on a particular record."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "ActionCode"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"ActionReasonCode LOV",
            "description":"The list of values for the action reason.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActionReasonCode; Target Attribute: ActionReasonCode</li><li>Display Attribute: ActionReasonCode</li><li>Display Attribute: ActionReasonId</li><li>Display Attribute: ActionReason</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ActionReasonCodeLOV?fields=ActionReasonCode,ActionReasonId,ActionReason",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "ActionReasonCode":{
                        "type":"string",
                        "description":"User-defined code for the action reason."
                    },
                    "ActionReasonId":{
                        "type":"integer",
                        "description":"Unique identifier for the action reason."
                    },
                    "ActionReason":{
                        "type":"string",
                        "description":"Description for the action reason."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "ActionReasonCode"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"AssignmentStatus LOV",
            "description":"The list of values for the HR status of the assignment.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/AssignmentStatusLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "AssignmentStatus"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"WorkTaxAddressId LOV",
            "description":"The list of values for the address that is used for taxation purposes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkTaxAddressId; Target Attribute: AddressId</li><li>Display Attribute: AddressId</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/WorkTaxAddressIdLOV?fields=AddressId,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "AddressId":{
                        "type":"integer",
                        "description":"Unique identifier for the address that is used for taxation purposes. This can be different from a mailing address."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "WorkTaxAddressId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"PositionId LOV",
            "description":"The list of values for positions.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PositionId; Target Attribute: PositionId</li><li>Display Attribute: PositionId</li><li>Display Attribute: Name</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/PositionIdLOV?fields=PositionId,Name",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "PositionId":{
                        "type":"integer",
                        "description":"Unique identifier for a position."
                    },
                    "Name":{
                        "type":"string",
                        "description":"Name of a position."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "PositionId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"ManagerId LOV",
            "description":"The list of values for managers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ManagerId; Target Attribute: PersonId</li><li>Display Attribute: PersonId</li><li>Display Attribute: DisplayName</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ManagerIdLOV?fields=PersonId,DisplayName",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "PersonId":{
                        "type":"integer",
                        "description":"Unique identifier for a manager."
                    },
                    "DisplayName":{
                        "type":"string",
                        "description":"Name of a manager."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "ManagerId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"AssignmentStatusTypeId LOV",
            "description":"The list of values for the user-defined status of the assignment.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentStatusTypeId; Target Attribute: AssignmentStatusTypeId</li><li>Display Attribute: AssignmentStatusTypeId</li><li>Display Attribute: AssignmentStatusCode</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/AssignmentStatusTypeIdLOV?fields=AssignmentStatusTypeId,AssignmentStatusCode",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "AssignmentStatusTypeId"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"FullPartTime LOV",
            "description":"The list of values indicating whether the assignment is full time or part time.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FullPartTime; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/FullPartTimeLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "FullPartTime"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"RegularTemporary LOV",
            "description":"The list of values indicating whether the assignment is regular or temporary.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegularTemporary; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/RegularTemporaryLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "RegularTemporary"
            ],
            "effectiveMethod":"get"
        }
        ],
        "type":"object"
        }
        
### Get an Employee Visa [GET /hcmRestApi/resources/latest/emps/{empsUniqID}/child/visas/{VisaPermitId}]

Get an employee visa by providing an person unique ID.

+ Parameters
    + empsUniqID: 30000038151 (number, required) - This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId.
    + VisaPermitId (number, optional) - Primary key generated by the application. 
     
+ Response 200 (application/json)

        {
        "properties":{
        "CreationDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of creation of the employee visa record."
        },
        "LastUpdateDate":{
            "format":"date-time",
            "type":"string",
            "description":"Date and time of update of the employee visa record."
        },
        "VisaPermitCountry":{
            "maxLength":30,
            "type":"string",
            "description":"Country for which visa or permit is valid. Valid values are defined in the list IssuingCountryLOV.",
            "title":"Issuing Country"
        },
        "VisaPermitExpiration":{
            "format":"date",
            "type":"string",
            "description":"Expiration date of visa or permit.",
            "title":"Expiration Date"
        },
        "VisaPermitId":{
            "format":"int64",
            "type":"integer",
            "description":"Primary key generated by the application."
        },
        "VisaPermitNumber":{
            "maxLength":30,
            "type":"string",
            "description":"Visa or permit number.",
            "title":"Number"
        },
        "VisaPermitType":{
            "maxLength":30,
            "type":"string",
            "description":"Visa or permit type. Valid values are defined in the list VisaPermitTypeLOV.",
            "title":"Type"
        },
        "links":{
            "items":{
                "$ref":"#/definitions/link"
            },
            "type":"array",
            "description":"Link Relations",
            "title":"Items"
        }
        },
        "x-links":[
        {
            "rel":"lov",
            "title":"VisaPermitType LOV",
            "description":"The list of values for visa or permit type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisaPermitType; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/visas/{VisaPermitId}/lov/VisaPermitTypeLOV?fields=LookupCode,Meaning",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "LookupCode":{
                        "type":"string",
                        "description":"Unique code for the lookup."
                    },
                    "Meaning":{
                        "type":"string",
                        "description":"Display value for the lookup in the application."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "VisaPermitType"
            ],
            "effectiveMethod":"get"
        },
        {
            "rel":"lov",
            "title":"VisaPermitCountry LOV",
            "description":"The list of values for countries that issue visa.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisaPermitCountry; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>",
            "method":"get",
            "href":"/hcmRestApi/resources/11.13.18.05/emps/{empsUniqID}/child/visas/{VisaPermitId}/lov/IssuingCountryLOV?fields=TerritoryCode,TerritoryShortName",
            "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
            "encType":"application/x-www-form-urlencoded",
            "targetSchema":{
                "properties":{
                    "TerritoryCode":{
                        "type":"string",
                        "description":"Country for which visa or permit is valid."
                    },
                    "TerritoryShortName":{
                        "type":"string",
                        "description":"Short name of the country for which visa or permit is valid."
                    }
                },
                "type":"object"
            },
            "schema":{
                "properties":{
                    "limit":{
                        "type":"integer",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                    },
                    "offset":{
                        "type":"integer",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                    },
                    "totalResults":{
                        "type":"boolean",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                    },
                    "onlyData":{
                        "type":"boolean",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                    },
                    "dependency":{
                        "type":"string",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                    },
                    "orderBy":{
                        "type":"string",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                    },
                    "links":{
                        "items":{
                            "$ref":"#/definitions/link"
                        },
                        "type":"array",
                        "description":"The link relations associated with the resource instance."
                    }
                },
                "type":"object"
            },
            "o:properties":[
                "VisaPermitCountry"
            ],
            "effectiveMethod":"get"
        }
        ],
        "type":"object"
        }

### Get an Employee Personal flexfield [GET /hcmRestApi/resources/latest/emps/{empsUniqID}/child/personDFF/{PersonId}/{?fields}]

Get an employee Personal flexfield by providing an person unique ID.

+ Parameters
    + empsUniqID: 30000038151 (number, required) - This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId.
    + PersonId (number, optional) - Internal identifier for the person.
    + fields (string, optional) - This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly.
     
+ Response 200 (application/json)
